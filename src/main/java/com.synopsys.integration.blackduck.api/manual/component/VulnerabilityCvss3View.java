package com.synopsys.integration.blackduck.api.manual.component;

import com.synopsys.integration.blackduck.api.core.BlackDuckComponent;
import com.synopsys.integration.blackduck.api.manual.component.Cvss3TemporalMetricsView;
import com.synopsys.integration.blackduck.api.manual.enumeration.VulnerabilityCvss3AttackComplexityEnum;
import com.synopsys.integration.blackduck.api.manual.enumeration.VulnerabilityCvss3AttackVectorEnum;
import com.synopsys.integration.blackduck.api.manual.enumeration.VulnerabilityCvss3IntegrityImpactEnum;
import com.synopsys.integration.blackduck.api.manual.enumeration.VulnerabilityCvss3ScopeEnum;
import com.synopsys.integration.blackduck.api.manual.enumeration.VulnerabilityCvss3UserInteractionEnum;

//this file should not be edited - if changes are necessary, the generator should be updated, then this file should be re-created
public class VulnerabilityCvss3View extends BlackDuckComponent {
    private VulnerabilityCvss3AttackComplexityEnum attackComplexity;
    private VulnerabilityCvss3AttackVectorEnum attackVector;
    private VulnerabilityCvss3IntegrityImpactEnum availabilityImpact;
    private java.math.BigDecimal baseScore;
    private VulnerabilityCvss3IntegrityImpactEnum confidentialityImpact;
    private java.math.BigDecimal exploitabilitySubscore;
    private java.math.BigDecimal impactSubscore;
    private VulnerabilityCvss3IntegrityImpactEnum integrityImpact;
    private VulnerabilityCvss3IntegrityImpactEnum privilegesRequired;
    private VulnerabilityCvss3ScopeEnum scope;
    private Cvss3TemporalMetricsView temporalMetrics;
    private VulnerabilityCvss3UserInteractionEnum userInteraction;
    private String vector;

    public VulnerabilityCvss3AttackComplexityEnum getAttackComplexity() {
        return attackComplexity;
    }

    public void setAttackComplexity(final VulnerabilityCvss3AttackComplexityEnum attackComplexity) {
        this.attackComplexity = attackComplexity;
    }

    public VulnerabilityCvss3AttackVectorEnum getAttackVector() {
        return attackVector;
    }

    public void setAttackVector(final VulnerabilityCvss3AttackVectorEnum attackVector) {
        this.attackVector = attackVector;
    }

    public VulnerabilityCvss3IntegrityImpactEnum getAvailabilityImpact() {
        return availabilityImpact;
    }

    public void setAvailabilityImpact(final VulnerabilityCvss3IntegrityImpactEnum availabilityImpact) {
        this.availabilityImpact = availabilityImpact;
    }

    public java.math.BigDecimal getBaseScore() {
        return baseScore;
    }

    public void setBaseScore(final java.math.BigDecimal baseScore) {
        this.baseScore = baseScore;
    }

    public VulnerabilityCvss3IntegrityImpactEnum getConfidentialityImpact() {
        return confidentialityImpact;
    }

    public void setConfidentialityImpact(final VulnerabilityCvss3IntegrityImpactEnum confidentialityImpact) {
        this.confidentialityImpact = confidentialityImpact;
    }

    public java.math.BigDecimal getExploitabilitySubscore() {
        return exploitabilitySubscore;
    }

    public void setExploitabilitySubscore(final java.math.BigDecimal exploitabilitySubscore) {
        this.exploitabilitySubscore = exploitabilitySubscore;
    }

    public java.math.BigDecimal getImpactSubscore() {
        return impactSubscore;
    }

    public void setImpactSubscore(final java.math.BigDecimal impactSubscore) {
        this.impactSubscore = impactSubscore;
    }

    public VulnerabilityCvss3IntegrityImpactEnum getIntegrityImpact() {
        return integrityImpact;
    }

    public void setIntegrityImpact(final VulnerabilityCvss3IntegrityImpactEnum integrityImpact) {
        this.integrityImpact = integrityImpact;
    }

    public VulnerabilityCvss3IntegrityImpactEnum getPrivilegesRequired() {
        return privilegesRequired;
    }

    public void setPrivilegesRequired(final VulnerabilityCvss3IntegrityImpactEnum privilegesRequired) {
        this.privilegesRequired = privilegesRequired;
    }

    public VulnerabilityCvss3ScopeEnum getScope() {
        return scope;
    }

    public void setScope(final VulnerabilityCvss3ScopeEnum scope) {
        this.scope = scope;
    }

    public Cvss3TemporalMetricsView getTemporalMetrics() {
        return temporalMetrics;
    }

    public void setTemporalMetrics(final Cvss3TemporalMetricsView temporalMetrics) {
        this.temporalMetrics = temporalMetrics;
    }

    public VulnerabilityCvss3UserInteractionEnum getUserInteraction() {
        return userInteraction;
    }

    public void setUserInteraction(final VulnerabilityCvss3UserInteractionEnum userInteraction) {
        this.userInteraction = userInteraction;
    }

    public String getVector() {
        return vector;
    }

    public void setVector(final String vector) {
        this.vector = vector;
    }

}